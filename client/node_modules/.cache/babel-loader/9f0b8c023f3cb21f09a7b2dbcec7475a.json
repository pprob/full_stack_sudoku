{"ast":null,"code":"export default (({\n  grid,\n  row,\n  col\n}) => {\n  const square = [];\n\n  if (row < 3) {\n    if (col < 3) {\n      for (let i = 0; i < 3; i++) {\n        square.push([grid[i][0], grid[i][1], grid[i][2]]);\n      }\n    } else if (col < 6) {\n      for (let i = 0; i < 3; i++) {\n        square.push([grid[i][3], grid[i][4], grid[i][5]]);\n      }\n    } else {\n      for (let i = 0; i < 3; i++) {\n        square.push([grid[i][6], grid[i][7], grid[i][8]]);\n      }\n    }\n  } else if (row < 6) {\n    if (col < 3) {\n      for (let i = 3; i < 6; i++) {\n        square.push([grid[i][0], grid[i][1], grid[i][2]]);\n      }\n    } else if (col < 6) {\n      for (let i = 3; i < 6; i++) {\n        square.push([grid[i][3], grid[i][4], grid[i][5]]);\n      }\n    } else {\n      for (let i = 3; i < 6; i++) {\n        square.push([grid[i][6], grid[i][7], grid[i][8]]);\n      }\n    }\n  } else {\n    if (col < 3) {\n      for (let i = 6; i < 9; i++) {\n        square.push([grid[i][0], grid[i][1], grid[i][2]]);\n      }\n    } else if (col < 6) {\n      for (let i = 6; i < 9; i++) {\n        square.push([grid[i][3], grid[i][4], grid[i][5]]);\n      }\n    } else {\n      for (let i = 6; i < 9; i++) {\n        square.push([grid[i][6], grid[i][7], grid[i][8]]);\n      }\n    }\n  }\n\n  return square;\n});","map":{"version":3,"sources":["/Users/a8106360/Documents/Self learning/Sudoku/client/src/utils/identifyWorkingSquare/identifyWorkingSquare.js"],"names":["grid","row","col","square","i","push"],"mappings":"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","sourcesContent":["export default ({ grid, row, col }) => {\n  const square = [];\n  if (row < 3) {\n    if (col < 3) {\n      for (let i = 0; i < 3; i++) {\n        square.push([grid[i][0], grid[i][1], grid[i][2]]);\n      }\n    } else if (col < 6) {\n      for (let i = 0; i < 3; i++) {\n        square.push([grid[i][3], grid[i][4], grid[i][5]]);\n      }\n    } else {\n      for (let i = 0; i < 3; i++) {\n        square.push([grid[i][6], grid[i][7], grid[i][8]]);\n      }\n    }\n  } else if (row < 6) {\n    if (col < 3) {\n      for (let i = 3; i < 6; i++) {\n        square.push([grid[i][0], grid[i][1], grid[i][2]]);\n      }\n    } else if (col < 6) {\n      for (let i = 3; i < 6; i++) {\n        square.push([grid[i][3], grid[i][4], grid[i][5]]);\n      }\n    } else {\n      for (let i = 3; i < 6; i++) {\n        square.push([grid[i][6], grid[i][7], grid[i][8]]);\n      }\n    }\n  } else {\n    if (col < 3) {\n      for (let i = 6; i < 9; i++) {\n        square.push([grid[i][0], grid[i][1], grid[i][2]]);\n      }\n    } else if (col < 6) {\n      for (let i = 6; i < 9; i++) {\n        square.push([grid[i][3], grid[i][4], grid[i][5]]);\n      }\n    } else {\n      for (let i = 6; i < 9; i++) {\n        square.push([grid[i][6], grid[i][7], grid[i][8]]);\n      }\n    }\n  }\n  return square;\n};"]},"metadata":{},"sourceType":"module"}