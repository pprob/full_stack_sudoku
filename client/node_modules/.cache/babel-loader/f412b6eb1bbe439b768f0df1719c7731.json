{"ast":null,"code":"var _jsxFileName = \"/Users/a8106360/Documents/Self learning/Sudoku/my-app/src/components/InfoBox.js\";\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { setDifficulty, setFeedback } from \"../redux/actions\";\nimport Dropdown from 'react-dropdown';\nimport \"../styles/App.css\";\nimport \"../styles/InfoBox.css\"; // difficulty, setDifficulty, feedback, changeFeedbackToggle\n\nconst InfoBox = ({\n  difficulty,\n  feedback,\n  dispatch\n}) => {\n  const difficultyLevels = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\n  const feedbackValue = feedback ? 'yes' : 'no';\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"info-box\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"app-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"info-item\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 11\n    }\n  }, \"Select your difficulty level:\", /*#__PURE__*/React.createElement(\"span\", {\n    className: \"dropdown-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Dropdown, {\n    options: difficultyLevels,\n    placeholder: \"select an option\",\n    onChange: e => {\n      console.log(typeof e.value);\n      const val = parseInt(e);\n      dispatch(setDifficulty(val));\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 15\n    }\n  }))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"info-item\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 11\n    }\n  }, \"Would you like real-time feedback as you play?\", /*#__PURE__*/React.createElement(\"span\", {\n    className: \"dropdown-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"select\", {\n    className: \"drop-down\",\n    value: feedbackValue,\n    onChange: e => {\n      const flag = e.target.value === 'yes' ? true : false;\n      dispatch(setFeedback(flag));\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"option\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 17\n    }\n  }, \"yes\"), /*#__PURE__*/React.createElement(\"option\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 17\n    }\n  }, \"no\")))))));\n};\n\nInfoBox.propTypes = {\n  difficulty: PropTypes.number,\n  feedback: PropTypes.bool\n};\n\nconst mapStateToProps = state => {\n  return {\n    difficulty: state.difficulty,\n    feedback: state.feedback\n  };\n};\n\nexport default connect(mapStateToProps)(InfoBox);","map":{"version":3,"sources":["/Users/a8106360/Documents/Self learning/Sudoku/my-app/src/components/InfoBox.js"],"names":["React","PropTypes","connect","setDifficulty","setFeedback","Dropdown","InfoBox","difficulty","feedback","dispatch","difficultyLevels","feedbackValue","e","console","log","value","val","parseInt","flag","target","propTypes","number","bool","mapStateToProps","state"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,aAAT,EAAwBC,WAAxB,QAA2C,kBAA3C;AACA,OAAOC,QAAP,MAAqB,gBAArB;AACA,OAAO,mBAAP;AACA,OAAO,uBAAP,C,CAEA;;AACA,MAAMC,OAAO,GAAG,CAAC;AAAEC,EAAAA,UAAF;AAAcC,EAAAA,QAAd;AAAwBC,EAAAA;AAAxB,CAAD,KAAwC;AACtD,QAAMC,gBAAgB,GAAG,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,EAAU,CAAV,EAAa,CAAb,EAAgB,CAAhB,EAAmB,CAAnB,EAAsB,CAAtB,EAAyB,CAAzB,EAA4B,EAA5B,CAAzB;AACA,QAAMC,aAAa,GAAGH,QAAQ,GAAG,KAAH,GAAW,IAAzC;AACA,sBACE;AAAK,IAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,SAAS,EAAC,eAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mDAEE;AAAM,IAAA,SAAS,EAAC,oBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,QAAD;AAAU,IAAA,OAAO,EAAEE,gBAAnB;AAAqC,IAAA,WAAW,EAAC,kBAAjD;AAAoE,IAAA,QAAQ,EAAEE,CAAC,IAAI;AACjFC,MAAAA,OAAO,CAACC,GAAR,CAAY,OAAOF,CAAC,CAACG,KAArB;AACA,YAAMC,GAAG,GAAGC,QAAQ,CAACL,CAAD,CAApB;AACAH,MAAAA,QAAQ,CAACN,aAAa,CAACa,GAAD,CAAd,CAAR;AACD,KAJD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CAFF,CADF,eAYE;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oEAEE;AAAM,IAAA,SAAS,EAAC,oBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAQ,IAAA,SAAS,EAAC,WAAlB;AAA8B,IAAA,KAAK,EAAEL,aAArC;AAAoD,IAAA,QAAQ,EAAEC,CAAC,IAAI;AACjE,YAAMM,IAAI,GAAGN,CAAC,CAACO,MAAF,CAASJ,KAAT,KAAmB,KAAnB,GAA2B,IAA3B,GAAkC,KAA/C;AACAN,MAAAA,QAAQ,CAACL,WAAW,CAACc,IAAD,CAAZ,CAAR;AACD,KAHD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAJF,eAKE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UALF,CADF,CAFF,CAZF,CADF,CADF,CADF;AA+BD,CAlCD;;AAoCAZ,OAAO,CAACc,SAAR,GAAoB;AAClBb,EAAAA,UAAU,EAAEN,SAAS,CAACoB,MADJ;AAElBb,EAAAA,QAAQ,EAAEP,SAAS,CAACqB;AAFF,CAApB;;AAIA,MAAMC,eAAe,GAAIC,KAAD,IAAW;AACjC,SAAO;AACLjB,IAAAA,UAAU,EAAEiB,KAAK,CAACjB,UADb;AAELC,IAAAA,QAAQ,EAAEgB,KAAK,CAAChB;AAFX,GAAP;AAID,CALD;;AAOA,eAAeN,OAAO,CAACqB,eAAD,CAAP,CAAyBjB,OAAzB,CAAf","sourcesContent":["import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { setDifficulty, setFeedback } from \"../redux/actions\";\nimport Dropdown from 'react-dropdown'\nimport \"../styles/App.css\";\nimport \"../styles/InfoBox.css\";\n\n// difficulty, setDifficulty, feedback, changeFeedbackToggle\nconst InfoBox = ({ difficulty, feedback, dispatch }) => {\n  const difficultyLevels = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\n  const feedbackValue = feedback ? 'yes' : 'no'\n  return (\n    <div className='info-box'>\n      <div className='app-container'>\n        <div>\n          <div className='info-item'>\n            Select your difficulty level:\n            <span className='dropdown-container'>\n              <Dropdown options={difficultyLevels} placeholder='select an option' onChange={e => {\n                console.log(typeof e.value)\n                const val = parseInt(e)\n                dispatch(setDifficulty(val))\n              }}/>\n            </span>\n          </div>\n\n          <div className='info-item'>\n            Would you like real-time feedback as you play?\n            <span className='dropdown-container'>\n              <select className='drop-down' value={feedbackValue} onChange={e => {\n                const flag = e.target.value === 'yes' ? true : false\n                dispatch(setFeedback(flag))\n              }}>\n                <option>yes</option>\n                <option>no</option>\n              </select>\n            </span>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nInfoBox.propTypes = {\n  difficulty: PropTypes.number,\n  feedback: PropTypes.bool,\n};\nconst mapStateToProps = (state) => {\n  return {\n    difficulty: state.difficulty,\n    feedback: state.feedback,\n  };\n};\n\nexport default connect(mapStateToProps)(InfoBox);\n\n\n                "]},"metadata":{},"sourceType":"module"}