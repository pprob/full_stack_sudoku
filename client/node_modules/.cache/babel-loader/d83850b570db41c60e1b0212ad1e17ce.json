{"ast":null,"code":"var _jsxFileName = \"/Users/a8106360/Documents/Self learning/Sudoku/my-app/src/components/BoardRow.js\";\nimport React from \"react\";\n\nconst BoardRow = props => {\n  const {\n    handleChange,\n    handleFocus,\n    id,\n    cellValues,\n    cellsBackgroundColors\n  } = props;\n  let trClassName = parseInt(id) % 3 === 1 && parseInt(id) > 1 ? \"square-sep\" : \"square\";\n\n  const getValueOfCell = (id, elem) => {\n    return 1;\n  };\n\n  const getBgColor = (id, elem) => {\n    return 'bg-white squareinp';\n  };\n\n  const array = [1, 2, 3, 4, 5, 6, 7, 8, 9];\n  return /*#__PURE__*/React.createElement(\"tr\", {\n    className: trClassName,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }\n  }, array.map(element => {\n    let cellValue = getValueOfCell(id, element);\n    return /*#__PURE__*/React.createElement(\"td\", {\n      key: element,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 15\n      }\n    }));\n  }));\n};\n\nexport default BoardRow;","map":{"version":3,"sources":["/Users/a8106360/Documents/Self learning/Sudoku/my-app/src/components/BoardRow.js"],"names":["React","BoardRow","props","handleChange","handleFocus","id","cellValues","cellsBackgroundColors","trClassName","parseInt","getValueOfCell","elem","getBgColor","array","map","element","cellValue"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;;AAEA,MAAMC,QAAQ,GAAGC,KAAK,IAAI;AACtB,QAAM;AACJC,IAAAA,YADI;AAEJC,IAAAA,WAFI;AAGJC,IAAAA,EAHI;AAIJC,IAAAA,UAJI;AAKJC,IAAAA;AALI,MAMFL,KANJ;AAOA,MAAIM,WAAW,GAAGC,QAAQ,CAACJ,EAAD,CAAR,GAAe,CAAf,KAAqB,CAArB,IAA0BI,QAAQ,CAACJ,EAAD,CAAR,GAAe,CAAzC,GAA6C,YAA7C,GAA2D,QAA7E;;AAEA,QAAMK,cAAc,GAAG,CAACL,EAAD,EAAKM,IAAL,KAAc;AACnC,WAAO,CAAP;AACD,GAFD;;AAGA,QAAMC,UAAU,GAAG,CAACP,EAAD,EAAKM,IAAL,KAAc;AAC/B,WAAO,oBAAP;AACD,GAFD;;AAIA,QAAME,KAAK,GAAG,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,EAAU,CAAV,EAAa,CAAb,EAAgB,CAAhB,EAAmB,CAAnB,EAAsB,CAAtB,EAAyB,CAAzB,CAAd;AACA,sBACE;AAAI,IAAA,SAAS,EAAEL,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGK,KAAK,CAACC,GAAN,CAAWC,OAAD,IAAa;AACtB,QAAIC,SAAS,GAAGN,cAAc,CAACL,EAAD,EAAKU,OAAL,CAA9B;AACA,wBACE;AAAI,MAAA,GAAG,EAAEA,OAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AACA,MAAA,IAAI,EAAC,MADL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CADF;AAOD,GATA,CADH,CADF;AAaI,CA/BR;;AAkCA,eAAed,QAAf","sourcesContent":["import React from \"react\";\n\nconst BoardRow = props => {\n    const {\n      handleChange,\n      handleFocus,\n      id,\n      cellValues,\n      cellsBackgroundColors\n    } = props;\n    let trClassName = parseInt(id) % 3 === 1 && parseInt(id) > 1 ? \"square-sep\": \"square\"\n\n    const getValueOfCell = (id, elem) => {\n      return 1\n    }\n    const getBgColor = (id, elem) => {\n      return 'bg-white squareinp'\n    }\n\n    const array = [1, 2, 3, 4, 5, 6, 7, 8, 9];\n    return  (\n      <tr className={trClassName}>\n        {array.map((element) => {\n          let cellValue = getValueOfCell(id, element)\n          return (\n            <td key={element}>\n              <input \n              type=\"text\">\n              </input>\n            </td>\n          )\n        })}\n      </tr>\n      )}\n\n\nexport default BoardRow"]},"metadata":{},"sourceType":"module"}