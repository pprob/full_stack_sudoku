{"ast":null,"code":"var _jsxFileName = \"/Users/a8106360/Documents/Self learning/Sudoku/my-app/src/components/App.js\";\nimport React from \"react\";\nimport Banner from \"./Banner\";\nimport Tools from \"./Tools\";\nimport Board from \"./Board\";\nimport Footer from \"./Footer\";\nimport fillGrid from '../utils/fillGrid/fillGrid';\nimport createFullGrid from '../utils/createFullGrid/createFullGrid';\nimport removeNumbers from '../utils/removeNumbers/removeNumbers';\nimport \"../styles/App.css\";\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.solve = () => {\n      console.log(\"solve\");\n    };\n\n    this.stop = () => {\n      console.log(\"stop\");\n    };\n\n    this.newGame = () => {\n      this.createFullGrid();\n    };\n\n    this.deleteGame = () => {\n      console.log(\"delete game\");\n    };\n\n    this.goBack = () => {\n      console.log(\"go back\");\n    };\n\n    this.setActiveCells = (row, col) => {\n      const activeCells = [];\n      activeCells.push(row, col);\n      this.setState(state => {\n        return {\n          activeCells\n        };\n      });\n    };\n\n    this.handleChange = (e, rowIndex, colIndex) => {\n      const value = parseInt(e.target.value);\n\n      if (e.target.value > 0 && e.target.value <= 9) {\n        this.setState(prevState => {\n          const currentGrid = prevState.cellValues;\n          currentGrid[rowIndex][colIndex] = value;\n          return {\n            cellValues: currentGrid\n          };\n        });\n      }\n    };\n\n    this.state = {\n      cellValues: createFullGrid(),\n      activeCells: []\n    };\n    this.handleChange = this.handleChange.bind(this);\n  }\n\n  componentDidUpdate() {\n    console.log(this.state);\n  }\n\n  componentDidMount() {\n    const array = [[0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0]];\n    fillGrid(array);\n    const challengeGrid = removeNumbers(array);\n    console.log(array);\n    console.log(challengeGrid);\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"app\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Banner, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"section\", {\n      className: \"app-body\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Tools, {\n      solve: this.solve,\n      stop: this.stop,\n      newGame: this.newGame,\n      deleteGame: this.deleteGame,\n      goBack: this.goBack,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(Board, {\n      cellValues: this.state.cellValues,\n      activeCells: this.state.activeCells,\n      handleChange: this.handleChange,\n      setActiveCells: this.setActiveCells,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 11\n      }\n    })), /*#__PURE__*/React.createElement(Footer, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 9\n      }\n    }));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/a8106360/Documents/Self learning/Sudoku/my-app/src/components/App.js"],"names":["React","Banner","Tools","Board","Footer","fillGrid","createFullGrid","removeNumbers","App","Component","constructor","props","solve","console","log","stop","newGame","deleteGame","goBack","setActiveCells","row","col","activeCells","push","setState","state","handleChange","e","rowIndex","colIndex","value","parseInt","target","prevState","currentGrid","cellValues","bind","componentDidUpdate","componentDidMount","array","challengeGrid","render"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,OAAOC,KAAP,MAAkB,SAAlB;AACA,OAAOC,KAAP,MAAkB,SAAlB;AACA,OAAOC,MAAP,MAAmB,UAAnB;AAGA,OAAOC,QAAP,MAAqB,4BAArB;AACA,OAAOC,cAAP,MAA2B,wCAA3B;AACA,OAAOC,aAAP,MAA0B,sCAA1B;AAGA,OAAO,mBAAP;;AAEA,MAAMC,GAAN,SAAkBR,KAAK,CAACS,SAAxB,CAAkC;AAChCC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;;AADiB,SASnBC,KATmB,GASX,MAAM;AACZC,MAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ;AACD,KAXkB;;AAAA,SAYnBC,IAZmB,GAYZ,MAAM;AACXF,MAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ;AACD,KAdkB;;AAAA,SAenBE,OAfmB,GAeT,MAAM;AACd,WAAKV,cAAL;AACD,KAjBkB;;AAAA,SAkBnBW,UAlBmB,GAkBN,MAAM;AACjBJ,MAAAA,OAAO,CAACC,GAAR,CAAY,aAAZ;AACD,KApBkB;;AAAA,SAqBnBI,MArBmB,GAqBV,MAAM;AACbL,MAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ;AACD,KAvBkB;;AAAA,SAwBnBK,cAxBmB,GAwBF,CAACC,GAAD,EAAMC,GAAN,KAAc;AAC7B,YAAMC,WAAW,GAAG,EAApB;AACAA,MAAAA,WAAW,CAACC,IAAZ,CAAiBH,GAAjB,EAAsBC,GAAtB;AACA,WAAKG,QAAL,CAAeC,KAAD,IAAW;AACvB,eAAO;AACLH,UAAAA;AADK,SAAP;AAGD,OAJD;AAKD,KAhCkB;;AAAA,SAiCnBI,YAjCmB,GAiCJ,CAACC,CAAD,EAAIC,QAAJ,EAAcC,QAAd,KAA2B;AACxC,YAAMC,KAAK,GAAGC,QAAQ,CAACJ,CAAC,CAACK,MAAF,CAASF,KAAV,CAAtB;;AACA,UAAIH,CAAC,CAACK,MAAF,CAASF,KAAT,GAAiB,CAAjB,IAAsBH,CAAC,CAACK,MAAF,CAASF,KAAT,IAAkB,CAA5C,EAA+C;AAC7C,aAAKN,QAAL,CAAcS,SAAS,IAAI;AACzB,gBAAMC,WAAW,GAAGD,SAAS,CAACE,UAA9B;AACAD,UAAAA,WAAW,CAACN,QAAD,CAAX,CAAsBC,QAAtB,IAAkCC,KAAlC;AACA,iBAAO;AACLK,YAAAA,UAAU,EAAED;AADP,WAAP;AAGD,SAND;AAOD;AACF,KA5CkB;;AAGjB,SAAKT,KAAL,GAAa;AACXU,MAAAA,UAAU,EAAE7B,cAAc,EADf;AAEXgB,MAAAA,WAAW,EAAE;AAFF,KAAb;AAIA,SAAKI,YAAL,GAAoB,KAAKA,YAAL,CAAkBU,IAAlB,CAAuB,IAAvB,CAApB;AACD;;AAqCDC,EAAAA,kBAAkB,GAAG;AACnBxB,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKW,KAAjB;AACD;;AAEDa,EAAAA,iBAAiB,GAAG;AAClB,UAAMC,KAAK,GAAG,CACZ,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,EAAU,CAAV,EAAa,CAAb,EAAgB,CAAhB,EAAmB,CAAnB,EAAsB,CAAtB,EAAyB,CAAzB,CADY,EAEZ,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,EAAU,CAAV,EAAa,CAAb,EAAgB,CAAhB,EAAmB,CAAnB,EAAsB,CAAtB,EAAyB,CAAzB,CAFY,EAGZ,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,EAAU,CAAV,EAAa,CAAb,EAAgB,CAAhB,EAAmB,CAAnB,EAAsB,CAAtB,EAAyB,CAAzB,CAHY,EAIZ,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,EAAU,CAAV,EAAa,CAAb,EAAgB,CAAhB,EAAmB,CAAnB,EAAsB,CAAtB,EAAyB,CAAzB,CAJY,EAKZ,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,EAAU,CAAV,EAAa,CAAb,EAAgB,CAAhB,EAAmB,CAAnB,EAAsB,CAAtB,EAAyB,CAAzB,CALY,EAMZ,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,EAAU,CAAV,EAAa,CAAb,EAAgB,CAAhB,EAAmB,CAAnB,EAAsB,CAAtB,EAAyB,CAAzB,CANY,EAOZ,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,EAAU,CAAV,EAAa,CAAb,EAAgB,CAAhB,EAAmB,CAAnB,EAAsB,CAAtB,EAAyB,CAAzB,CAPY,EAQZ,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,EAAU,CAAV,EAAa,CAAb,EAAgB,CAAhB,EAAmB,CAAnB,EAAsB,CAAtB,EAAyB,CAAzB,CARY,EASZ,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,EAAU,CAAV,EAAa,CAAb,EAAgB,CAAhB,EAAmB,CAAnB,EAAsB,CAAtB,EAAyB,CAAzB,CATY,CAAd;AAWAlC,IAAAA,QAAQ,CAACkC,KAAD,CAAR;AACA,UAAMC,aAAa,GAAGjC,aAAa,CAACgC,KAAD,CAAnC;AACA1B,IAAAA,OAAO,CAACC,GAAR,CAAYyB,KAAZ;AACA1B,IAAAA,OAAO,CAACC,GAAR,CAAY0B,aAAZ;AACD;;AACDC,EAAAA,MAAM,GAAG;AACP,wBACE;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,eAEE;AAAS,MAAA,SAAS,EAAC,UAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,KAAD;AACE,MAAA,KAAK,EAAE,KAAK7B,KADd;AAEE,MAAA,IAAI,EAAE,KAAKG,IAFb;AAGE,MAAA,OAAO,EAAE,KAAKC,OAHhB;AAIE,MAAA,UAAU,EAAE,KAAKC,UAJnB;AAKE,MAAA,MAAM,EAAE,KAAKC,MALf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,eAQE,oBAAC,KAAD;AACE,MAAA,UAAU,EAAE,KAAKO,KAAL,CAAWU,UADzB;AAEE,MAAA,WAAW,EAAE,KAAKV,KAAL,CAAWH,WAF1B;AAGE,MAAA,YAAY,EAAE,KAAKI,YAHrB;AAIE,MAAA,cAAc,EAAE,KAAKP,cAJvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MARF,CAFF,eAiBE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAjBF,CADF;AAqBD;;AAzF+B;;AA4FlC,eAAeX,GAAf","sourcesContent":["import React from \"react\";\nimport Banner from \"./Banner\";\nimport Tools from \"./Tools\";\nimport Board from \"./Board\";\nimport Footer from \"./Footer\";\n\n\nimport fillGrid from '../utils/fillGrid/fillGrid';\nimport createFullGrid from '../utils/createFullGrid/createFullGrid';\nimport removeNumbers from '../utils/removeNumbers/removeNumbers';\n\n\nimport \"../styles/App.css\";\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      cellValues: createFullGrid(),\n      activeCells: []\n    };\n    this.handleChange = this.handleChange.bind(this);\n  }\n  solve = () => {\n    console.log(\"solve\");\n  };\n  stop = () => {\n    console.log(\"stop\");\n  };\n  newGame = () => {\n    this.createFullGrid();\n  };\n  deleteGame = () => {\n    console.log(\"delete game\");\n  };\n  goBack = () => {\n    console.log(\"go back\");\n  };\n  setActiveCells = (row, col) => {\n    const activeCells = []\n    activeCells.push(row, col)\n    this.setState((state) => {\n      return {\n        activeCells\n      }\n    })\n  }\n  handleChange = (e, rowIndex, colIndex) => {\n    const value = parseInt(e.target.value);\n    if (e.target.value > 0 && e.target.value <= 9) {\n      this.setState(prevState => {\n        const currentGrid = prevState.cellValues;\n        currentGrid[rowIndex][colIndex] = value;\n        return {\n          cellValues: currentGrid\n        };\n      });\n    }\n  };\n  componentDidUpdate() {\n    console.log(this.state)\n  }\n\n  componentDidMount() {\n    const array = [\n      [0, 0, 0, 0, 0, 0, 0, 0, 0],\n      [0, 0, 0, 0, 0, 0, 0, 0, 0],\n      [0, 0, 0, 0, 0, 0, 0, 0, 0],\n      [0, 0, 0, 0, 0, 0, 0, 0, 0],\n      [0, 0, 0, 0, 0, 0, 0, 0, 0],\n      [0, 0, 0, 0, 0, 0, 0, 0, 0],\n      [0, 0, 0, 0, 0, 0, 0, 0, 0],\n      [0, 0, 0, 0, 0, 0, 0, 0, 0],\n      [0, 0, 0, 0, 0, 0, 0, 0, 0],\n    ]\n    fillGrid(array)\n    const challengeGrid = removeNumbers(array)\n    console.log(array)\n    console.log(challengeGrid)\n  }\n  render() {\n    return (\n      <div className=\"app\">\n        <Banner />\n        <section className=\"app-body\">\n          <Tools\n            solve={this.solve}\n            stop={this.stop}\n            newGame={this.newGame}\n            deleteGame={this.deleteGame}\n            goBack={this.goBack}\n          />\n          <Board\n            cellValues={this.state.cellValues}\n            activeCells={this.state.activeCells}\n            handleChange={this.handleChange}\n            setActiveCells={this.setActiveCells}\n          />\n        </section>\n        <Footer />\n      </div>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}