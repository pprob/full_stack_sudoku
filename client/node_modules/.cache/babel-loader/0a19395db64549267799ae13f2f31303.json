{"ast":null,"code":"import shuffle from \"../shuffle/shuffle\";\nimport isInCol from \"../isInCol/isInCol\";\nimport isInRow from \"../isInRow/isInRow\";\nimport identifyWorkingSquare from \"../identifyWorkingSquare/identifyWorkingSquare\";\nimport isInSquare from \"../isInSquare/isInSquare\";\nimport checkGrid from \"../checkGrid/checkGrid\";\nconst nums = [1, 2, 3, 4, 5, 6, 7, 8, 9];\n\nfunction fillGrid(grid) {\n  let row = 0;\n  let col = 0;\n\n  for (let i = 0; i < 81; i++) {\n    row = Math.floor(i / 9);\n    col = i % 9;\n\n    if (grid[row][col] === 0) {\n      shuffle;\n    }\n  }\n}\n\nexport default fillGrid;","map":{"version":3,"sources":["/Users/a8106360/Documents/Self learning/Sudoku/my-app/src/utils/fillGrid/fillGrid.js"],"names":["shuffle","isInCol","isInRow","identifyWorkingSquare","isInSquare","checkGrid","nums","fillGrid","grid","row","col","i","Math","floor"],"mappings":"AAAA,OAAOA,OAAP,MAAoB,oBAApB;AACA,OAAOC,OAAP,MAAoB,oBAApB;AACA,OAAOC,OAAP,MAAoB,oBAApB;AACA,OAAOC,qBAAP,MAAkC,gDAAlC;AACA,OAAOC,UAAP,MAAuB,0BAAvB;AACA,OAAOC,SAAP,MAAsB,wBAAtB;AAEA,MAAMC,IAAI,GAAG,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,EAAU,CAAV,EAAa,CAAb,EAAgB,CAAhB,EAAmB,CAAnB,EAAsB,CAAtB,EAAyB,CAAzB,CAAb;;AAEA,SAASC,QAAT,CAAkBC,IAAlB,EAAwB;AACtB,MAAIC,GAAG,GAAG,CAAV;AACA,MAAIC,GAAG,GAAG,CAAV;;AAEA,OAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,EAApB,EAAwBA,CAAC,EAAzB,EAA6B;AAC3BF,IAAAA,GAAG,GAAGG,IAAI,CAACC,KAAL,CAAWF,CAAC,GAAG,CAAf,CAAN;AACAD,IAAAA,GAAG,GAAGC,CAAC,GAAG,CAAV;;AAEA,QAAGH,IAAI,CAACC,GAAD,CAAJ,CAAUC,GAAV,MAAmB,CAAtB,EAAyB;AACvBV,MAAAA,OAAO;AACR;AACF;AACF;;AAED,eAAeO,QAAf","sourcesContent":["import shuffle from \"../shuffle/shuffle\";\nimport isInCol from \"../isInCol/isInCol\";\nimport isInRow from \"../isInRow/isInRow\";\nimport identifyWorkingSquare from \"../identifyWorkingSquare/identifyWorkingSquare\";\nimport isInSquare from \"../isInSquare/isInSquare\";\nimport checkGrid from \"../checkGrid/checkGrid\";\n\nconst nums = [1, 2, 3, 4, 5, 6, 7, 8, 9]\n\nfunction fillGrid(grid) {\n  let row = 0\n  let col = 0\n\n  for (let i = 0; i < 81; i++) {\n    row = Math.floor(i / 9)\n    col = i % 9\n\n    if(grid[row][col] === 0) {\n      shuffle\n    }\n  }\n}\n\nexport default fillGrid;\n"]},"metadata":{},"sourceType":"module"}