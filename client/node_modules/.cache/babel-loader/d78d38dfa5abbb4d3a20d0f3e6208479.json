{"ast":null,"code":"var _jsxFileName = \"/Users/a8106360/Documents/Self learning/Sudoku/my-app/src/App.js\";\nimport React from \"react\";\nimport \"bulma/css/bulma.css\";\nimport _ from \"underscore\";\nimport Banner from \"./components/Banner\";\nimport Tools from \"./components/Tools\";\nimport Board from \"./components/Board\";\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.solve = () => {\n      console.log(\"solve\");\n    };\n\n    this.stop = () => {\n      console.log(\"stop\");\n    };\n\n    this.newGame = () => {\n      console.log(\"new game\");\n    };\n\n    this.deleteGame = () => {\n      console.log(\"delete game\");\n    };\n\n    this.getThisAsStr = () => {\n      console.log(\"getThisAsStr\");\n    };\n\n    this.goBack = () => {\n      console.log(\"go back\");\n    };\n\n    this.handleChange = e => {\n      console.log(e);\n    };\n\n    this.shuffle = array => {\n      for (let i = array.length - 1; i > 0; i--) {\n        const j = Math.floor(Math.random() * (i + 1));\n        [array[i], array[j]] = [array[j], array[i]];\n      }\n    };\n\n    this.isInRow = ({\n      grid,\n      row,\n      value\n    }) => {\n      if (grid[row].includes(value)) {\n        return true;\n      }\n\n      return false;\n    };\n\n    this.isInCol = ({\n      grid,\n      col,\n      value\n    }) => {\n      for (let i = 0; i < 9; i++) {\n        if (grid[i][col] === value) {\n          return true;\n        }\n      }\n\n      return false;\n    };\n\n    this.identifyWorkingSquare = ({\n      grid,\n      row,\n      col\n    }) => {\n      const square = [];\n\n      if (row < 3) {\n        if (col < 3) {\n          for (let i = 0; i < 3; i++) {\n            square.push(grid[i][0], grid[i][1], grid[i][2]);\n          }\n        } else if (col < 6) {\n          for (let i = 0; i < 3; i++) {\n            square.push(grid[i][3], grid[i][4], grid[i][5]);\n          }\n        } else {\n          for (let i = 0; i < 3; i++) {\n            square.push(grid[i][6], grid[i][7], grid[i][8]);\n          }\n        }\n      } else if (row < 6) {\n        if (col < 3) {\n          for (let i = 0; i < 3; i++) {\n            square.push(grid[i][0], grid[i][1], grid[i][2]);\n          }\n        } else if (col < 6) {\n          for (let i = 0; i < 3; i++) {\n            square.push(grid[i][0], grid[i][1], grid[i][2]);\n          }\n        } else {\n          for (let i = 0; i < 3; i++) {\n            square.push(grid[i][0], grid[i][1], grid[i][2]);\n          }\n        }\n      } else {\n        if (col < 3) {} else if (col < 6) {} else {}\n      }\n    };\n\n    this.fillGrid = () => {\n      const numbers = [1, 2, 3, 4, 5, 6, 7, 8, 9];\n      const grid = [[0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0]];\n\n      for (let i = 0; i < 81; i++) {\n        let row = Math.floor(i / 9);\n        let col = i % 9;\n\n        if (grid[row][col] === 0) {\n          this.shuffle(numbers);\n          numbers.forEach(number => {\n            // Is it not in grid row\n            if (!this.isInRow({\n              grid,\n              row,\n              number\n            })) {\n              if (!this.isInCol({\n                grid,\n                col,\n                number\n              })) {\n                grid[row][col] = number;\n              }\n            } //Is it not in grid col\n            // Is it not in grid square\n            // If truthy\n\n\n            grid[row][col] = number;\n          });\n        }\n      }\n    };\n\n    this.state = {\n      cellValues: new Array(81).fill(\"\")\n    };\n  }\n\n  componentDidMount() {}\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Banner, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(Tools, {\n      solve: this.solve,\n      stop: this.stop,\n      newGame: this.newGame,\n      deleteGame: this.deleteGame,\n      getThisAsStr: this.getThisAsStr,\n      goBack: this.goBack,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(Board, {\n      cellValues: this.state.cellValues,\n      handleChange: this.handleChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 9\n      }\n    }));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/a8106360/Documents/Self learning/Sudoku/my-app/src/App.js"],"names":["React","_","Banner","Tools","Board","App","Component","constructor","props","solve","console","log","stop","newGame","deleteGame","getThisAsStr","goBack","handleChange","e","shuffle","array","i","length","j","Math","floor","random","isInRow","grid","row","value","includes","isInCol","col","identifyWorkingSquare","square","push","fillGrid","numbers","forEach","number","state","cellValues","Array","fill","componentDidMount","render"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport \"bulma/css/bulma.css\";\nimport _ from \"underscore\";\nimport Banner from \"./components/Banner\";\nimport Tools from \"./components/Tools\";\nimport Board from \"./components/Board\";\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      cellValues: new Array(81).fill(\"\")\n    };\n  }\n  solve = () => {\n    console.log(\"solve\");\n  };\n  stop = () => {\n    console.log(\"stop\");\n  };\n  newGame = () => {\n    console.log(\"new game\");\n  };\n  deleteGame = () => {\n    console.log(\"delete game\");\n  };\n  getThisAsStr = () => {\n    console.log(\"getThisAsStr\");\n  };\n  goBack = () => {\n    console.log(\"go back\");\n  };\n  handleChange = e => {\n    console.log(e);\n  };\n  shuffle = array => {\n    for (let i = array.length - 1; i > 0; i--) {\n      const j = Math.floor(Math.random() * (i + 1));\n      [array[i], array[j]] = [array[j], array[i]];\n    }\n  };\n  isInRow = ({ grid, row, value }) => {\n    if (grid[row].includes(value)) {\n      return true;\n    }\n    return false;\n  };\n  isInCol = ({ grid, col, value }) => {\n    for (let i = 0; i < 9; i++) {\n      if (grid[i][col] === value) {\n        return true;\n      }\n    }\n    return false;\n  };\n  identifyWorkingSquare = ({ grid, row, col }) => {\n    const square = [];\n    if (row < 3) {\n      if (col < 3) {\n        for (let i = 0; i < 3; i++) {\n          square.push(grid[i][0], grid[i][1], grid[i][2]);\n        }\n      } else if (col < 6) {\n        for (let i = 0; i < 3; i++) {\n          square.push(grid[i][3], grid[i][4], grid[i][5]);\n        }\n      } else {\n        for (let i = 0; i < 3; i++) {\n          square.push(grid[i][6], grid[i][7], grid[i][8]);\n        }\n      }\n    } else if (row < 6) {\n      if (col < 3) {\n        for (let i = 0; i < 3; i++) {\n          square.push(grid[i][0], grid[i][1], grid[i][2]);\n        }\n      } else if (col < 6) {\n        for (let i = 0; i < 3; i++) {\n          square.push(grid[i][0], grid[i][1], grid[i][2]);\n        }\n      } else {\n        for (let i = 0; i < 3; i++) {\n          square.push(grid[i][0], grid[i][1], grid[i][2]);\n        }\n      }\n    } else {\n      if (col < 3) {\n      } else if (col < 6) {\n      } else {\n      }\n    }\n  };\n  fillGrid = () => {\n    const numbers = [1, 2, 3, 4, 5, 6, 7, 8, 9];\n    const grid = [\n      [0, 0, 0, 0, 0, 0, 0, 0, 0],\n      [0, 0, 0, 0, 0, 0, 0, 0, 0],\n      [0, 0, 0, 0, 0, 0, 0, 0, 0],\n      [0, 0, 0, 0, 0, 0, 0, 0, 0],\n      [0, 0, 0, 0, 0, 0, 0, 0, 0],\n      [0, 0, 0, 0, 0, 0, 0, 0, 0],\n      [0, 0, 0, 0, 0, 0, 0, 0, 0],\n      [0, 0, 0, 0, 0, 0, 0, 0, 0],\n      [0, 0, 0, 0, 0, 0, 0, 0, 0]\n    ];\n    for (let i = 0; i < 81; i++) {\n      let row = Math.floor(i / 9);\n      let col = i % 9;\n\n      if (grid[row][col] === 0) {\n        this.shuffle(numbers);\n\n        numbers.forEach(number => {\n          // Is it not in grid row\n          if (!this.isInRow({ grid, row, number })) {\n            if (!this.isInCol({ grid, col, number })) {\n              grid[row][col] = number;\n            }\n          }\n          //Is it not in grid col\n          // Is it not in grid square\n\n          // If truthy\n          grid[row][col] = number;\n        });\n      }\n    }\n  };\n\n  componentDidMount() {}\n  render() {\n    return (\n      <div>\n        <Banner />\n        <Tools\n          solve={this.solve}\n          stop={this.stop}\n          newGame={this.newGame}\n          deleteGame={this.deleteGame}\n          getThisAsStr={this.getThisAsStr}\n          goBack={this.goBack}\n        />\n        <Board\n          cellValues={this.state.cellValues}\n          handleChange={this.handleChange}\n        />\n      </div>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}