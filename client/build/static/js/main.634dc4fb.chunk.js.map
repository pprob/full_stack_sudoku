{"version":3,"sources":["redux/actions/actions.js","components/Tools.js","components/BoardRow.js","components/Board.js","redux/actions/infoActions.js","components/InfoBox.js","components/App.js","components/Navbar.js","components/Banner.js","components/Footer.js","components/Loader.js","redux/actions/signupActions.js","components/Signup.js","components/Login.js","components/ProfileCard.js","components/ProfilePage.js","components/TipTile.js","data/TipsData/index.js","components/HelpLayout.js","components/CardSection.js","components/CardForm.js","components/DonatePage.js","components/Logout.js","components/LeaderboardRow.js","components/Leaderboard.js","utils/filterPlayerScores/filterPlayerScores.js","redux/actions/playerScoreActions.js","routers/AppRouter.js","utils/shuffle/shuffle.js","utils/isInCol/isInCol.js","utils/isInRow/isInRow.js","utils/identifyWorkingSquare/identifyWorkingSquare.js","utils/isInSquare/isInSquare.js","utils/checkGrid/checkGrid.js","utils/fillGrid/fillGrid.js","utils/createFullGrid/createFullGrid.js","utils/copyGrid/copyGrid.js","global/index.js","utils/getRandomIndex/getRandomIndex.js","utils/solveGrid/solveGrid.js","utils/removeNumbers/removeNumbers.js","redux/reducers/appReducer.js","redux/reducers/infoReducer.js","redux/reducers/signupReducer.js","redux/reducers/playerScores.js","index.js"],"names":["createNewGame","difficulty","type","connect","state","infoState","boardState","props","dispatch","customAlert","useAlert","className","onClick","e","show","inPlay","error","cellValues","solvedCellValues","activeCells","feedback","rowIndex","map","element","column","colIndex","cellValue","row","isSameAsActive","isInPlay","borderClasses","col","isRightColBorder","isTopRowBorder","isBottomRowBorder","key","value","maxLength","setActiveCells","onChange","length","alert","parseInt","target","isNaN","checkValid","newValue","setCellValue","gameDifficulty","usedSolver","updateScore","a","update","axios","patch","useEffect","hasWon","i","j","checkGameOver","success","setTimeout","info","number","setFeedback","level","name","id","checked","App","React","Component","Navbar","loggedIn","to","activeClassName","exact","Banner","Footer","Loader","setErrorField","payload","signupState","email","password","username","isLoading","onSubmit","preventDefault","validator","isEmail","toLowerCase","includes","requestField","post","data","history","push","response","placeholder","signUpState","useState","SetEmail","SetPassword","SetError","formData","window","location","reload","ProfileCard","loaded","undefined","description","avatarFile","avatarURL","scoreCard","setAvatarState","setState","files","handleAvatarUpload","FormData","append","componentDidMount","fetchProfile","componentDidUpdate","get","message","renderLoader","renderProfile","htmlFor","src","Fragment","this","ProfilePage","TipTile","title","headerStyles","color","tip1","style","tip","tip2","tip3","tip4","HelpLayout","Object","keys","tipsData","index","cardElementOptions","base","fontFamily","fontSmoothing","fontSize","invalid","iconColor","CardSection","CardForm","stripe","useStripe","elements","useElements","client_secret","confirmCardPayment","payment_method","card","getElement","CardElement","billing_details","result","paymentIntent","status","disabled","DonatePage","Logout","handleLogout","LeaderboardRow","rank","userName","wins","playerScores","nameFilter","playerScoreState","playerScoresState","userScores","filter","scores","setLoaded","fetchLeaderboard","filteredScores","filterLeaderboardScoresByRank","userData","rankedFilteredScores","player","score","sort","b","playerName","user","AppRouter","isAuth","setAuthStatus","isLoggedIn","withCredentials","path","component","Signup","Login","render","Leaderboard","array","Math","floor","random","grid","square","fillGrid","nums","shuffle","isInRow","isInCol","identifyWorkingSquare","isInSquare","checkGrid","createFullGrid","copyGrid","gridCopy","r","c","counter","getRandomIndex","solveGrid","numbers","global","removeNumbers","attempts","backup","defaultState","gameOver","action","solvedGrid","copyOfSolvedGrid","challengeGrid","currentGrid","stripePromise","loadStripe","alertOptions","position","positions","BOTTOM_CENTER","timeout","store","createStore","combineReducers","appReducer","infoReducer","signupReducer","playerScoresReducer","ReactDOM","template","AlertTemplate","document","getElementById"],"mappings":"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","file":"static/js/main.634dc4fb.chunk.js","sourcesContent":["\r\n// Create new game\r\n\r\n// set active cells\r\nexport const setActiveCells = (row, col) => {\r\n  return {\r\n    type: 'SET_ACTIVE_CELLS',\r\n    row,\r\n    col\r\n  }\r\n}\r\n\r\n// set cell value\r\nexport const setCellValue = (row, col, value) => {\r\n  return {\r\n    type: 'SET_CELL_VALUE',\r\n    row,\r\n    col,\r\n    value\r\n  }\r\n}\r\n// Tools\r\n// Create new game\r\nexport const createNewGame = (difficulty) => {\r\n  return {\r\n    type: 'CREATE_NEW_GAME',\r\n    difficulty\r\n  }\r\n}\r\n\r\nexport const showSolution = () => {\r\n  return {\r\n    type: 'SHOW_SOLUTION'\r\n  }\r\n}\r\n\r\nexport const gameWon = () => {\r\n  return {\r\n    type: 'GAME_WON'\r\n  }\r\n}\r\n\r\n","import React from \"react\";\r\nimport { connect } from 'react-redux'\r\nimport { createNewGame, showSolution } from '../redux/actions/actions'\r\nimport { useAlert } from 'react-alert'\r\nimport \"../styles/Tools.css\";\r\n\r\nconst Tools = props => {\r\n  const { dispatch, infoState, boardState} = props;\r\n\r\n  const customAlert = useAlert()\r\n  \r\n  const createGame = (e) => {\r\n    dispatch(createNewGame(infoState.difficulty))\r\n  }\r\n\r\n  const displaySolution = (e) => {\r\n    customAlert.show('Using the solver invalidates your chance of a clean victory!')\r\n    if (boardState.inPlay) {\r\n      dispatch(showSolution())\r\n    } else {\r\n      customAlert.error('Please start a new game first')\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className=\"button-container\">\r\n      <button className=\"button new-game\" onClick={createGame}>\r\n        New Game\r\n      </button>\r\n      <button className=\"button solve\" onClick={displaySolution}>\r\n        Solution\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    infoState: state.infoState,\r\n    boardState: state.boardState\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps)(Tools)\r\n\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport { setActiveCells, setCellValue } from \"../redux/actions/actions\";\r\nimport { useAlert } from \"react-alert\";\r\nimport \"../styles/BoardRow.css\";\r\n\r\nconst BoardRow = (props) => {\r\n  const {\r\n    cellValues,\r\n    solvedCellValues,\r\n    rowIndex,\r\n    activeCells,\r\n    dispatch,\r\n    feedback,\r\n  } = props;\r\n  \r\n  const customAlert = useAlert();\r\n  const columns = [1, 2, 3, 4, 5, 6, 7, 8, 9];\r\n  const getValue = (row, column) => {\r\n    return cellValues[row][column];\r\n  };\r\n\r\n  const isInPlay = (activeCells, row, column) => {\r\n    const isSameAsActive =\r\n      row === activeCells[0] && column === activeCells[1] ? true : false;\r\n    if (row === activeCells[0] && !isSameAsActive) return true;\r\n    if (column === activeCells[1] && !isSameAsActive) return true;\r\n    return false;\r\n  };\r\n  const checkValid = (e, rowIndex, colIndex) => {\r\n    if (cellValues.length === 0 || solvedCellValues.length === 0) {\r\n      alert(\"Please start the game\");\r\n      return false;\r\n    }\r\n    const value = parseInt(e.target.value);\r\n    if (isNaN(value)) {\r\n      customAlert.error(\"You must enter a number between 0 and 9\");\r\n      return false;\r\n    }\r\n    if (solvedCellValues[rowIndex][colIndex] !== value && feedback) {\r\n      customAlert.error(\"Invalid input, please try again\");\r\n      return false;\r\n    }\r\n    return true;\r\n  };\r\n\r\n  // Setting border classnames\r\n  // columns\r\n  const isLeftColBorder = (col) => {\r\n    if (col === 0) {\r\n      return true;\r\n    }\r\n    return false;\r\n  };\r\n  const isRightColBorder = (col) => {\r\n    if (col === 2 || col === 5 || col === 8) {\r\n      return true;\r\n    }\r\n    return false;\r\n  };\r\n  // rows\r\n  const isTopRowBorder = (row) => {\r\n    if (row === 0) {\r\n      return true;\r\n    }\r\n    return false;\r\n  };\r\n  const isBottomRowBorder = (row) => {\r\n    if (row === 2 || row === 5 || row === 8) {\r\n      return true;\r\n    }\r\n    return false;\r\n  };\r\n\r\n  return (\r\n    <tr>\r\n      {columns.map((element) => {\r\n        const colIndex = element - 1;\r\n        var cellValue = getValue(rowIndex, colIndex);\r\n        if (cellValue === 0) {\r\n          cellValue = \"\";\r\n        }\r\n        const inPlay = isInPlay(activeCells, rowIndex, colIndex)\r\n          ? \"inPlay\"\r\n          : \"\";\r\n        let borderClasses = \"\";\r\n        if (isLeftColBorder(colIndex)) {\r\n          borderClasses += \"grid-border-left \";\r\n        }\r\n        if (isRightColBorder(colIndex)) {\r\n          borderClasses += \"grid-border-right \";\r\n        }\r\n        if (isTopRowBorder(rowIndex)) {\r\n          borderClasses += \"grid-border-top \";\r\n        }\r\n        if (isBottomRowBorder(rowIndex)) {\r\n          borderClasses += \"grid-border-bottom\";\r\n        }\r\n        return (\r\n          <td key={element} className={`square-cell ${borderClasses}`}>\r\n            <input\r\n              className={`square-input ${inPlay}`}\r\n              type=\"text\"\r\n              value={cellValue}\r\n              maxLength=\"1\"\r\n              onClick={(e) => dispatch(setActiveCells(rowIndex, colIndex))}\r\n              onChange={(e) => {\r\n                if (checkValid(e, rowIndex, colIndex)) {\r\n                  const newValue = parseInt(e.target.value);\r\n                  dispatch(setCellValue(rowIndex, colIndex, newValue));\r\n                }\r\n              }}\r\n            />\r\n          </td>\r\n        );\r\n      })}\r\n    </tr>\r\n  );\r\n};\r\nBoardRow.propTypes = {\r\n  cellValues: PropTypes.array,\r\n  solvedCellValues: PropTypes.array,\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    boardState: state.boardState,\r\n    cellValues: state.boardState.cellValues,\r\n    solvedCellValues: state.boardState.solvedCellValues,\r\n    activeCells: state.boardState.activeCells,\r\n    feedback: state.infoState.feedback,\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps)(BoardRow);\r\n","import React, { useEffect } from \"react\";\r\nimport { connect } from 'react-redux';\r\nimport BoardRow from \"./BoardRow\";\r\nimport axios from 'axios'\r\nimport { useAlert } from \"react-alert\";\r\nimport \"../styles/Board.css\";\r\nimport { createNewGame } from '../redux/actions/actions'\r\n\r\n\r\nconst Board = props => {\r\n  const { boardState, dispatch } = props\r\n  const { inPlay, gameDifficulty, usedSolver, cellValues, solvedCellValues } = boardState\r\n  const nineArray = [1, 2, 3, 4, 5, 6, 7, 8, 9];\r\n  \r\n  const customAlert = useAlert();\r\n\r\n  const updateScore = async () => {\r\n    const update = {\r\n      difficulty: gameDifficulty\r\n    }\r\n    await axios.patch('/api/scores/update-score', update)\r\n    return\r\n  }\r\n\r\n  const checkGameOver = () => {\r\n    var hasWon = true;\r\n    for (let i = 0; i < 9; i++) {\r\n      for (let j = 0; j < 9; j++) {\r\n        if (cellValues[i][j] !== solvedCellValues[i][j]) {\r\n          hasWon = false;\r\n          break;\r\n        }\r\n      }\r\n    }\r\n    return hasWon;\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (inPlay) {\r\n      const gameWon = checkGameOver();\r\n      if (gameWon && !usedSolver) {\r\n        updateScore()\r\n        customAlert.success(`Congratulations! You won! If you're logged in, we'll track your scores!`)\r\n        setTimeout(() => {\r\n          customAlert.info('Creating a new game!')\r\n          dispatch(createNewGame(gameDifficulty))\r\n        }, 2000)\r\n      }\r\n    }\r\n  });\r\n  return (\r\n    <div className=\"board-container\">\r\n      <table className=\"board\">\r\n        <tbody>\r\n          {nineArray.map(number => {\r\n            return (\r\n              <BoardRow\r\n                key={number}\r\n                rowIndex={number - 1}\r\n              />\r\n            );\r\n          })}\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    boardState: state.boardState\r\n  }\r\n}\r\nexport default connect(mapStateToProps)(Board)\r\n\r\n","// setFeedback true/false\r\nexport const setFeedback = (value) => {\r\n  return {\r\n    type: 'SET_FEEDBACK',\r\n    value\r\n  }\r\n}\r\n// set difficulty\r\nexport const setDifficulty = (value) => ({\r\n  type: 'SET_DIFFICULTY',\r\n  value\r\n})","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport { setDifficulty, setFeedback } from \"../redux/actions/infoActions\";\r\nimport \"../styles/App.css\";\r\nimport \"../styles/InfoBox.css\";\r\n\r\n// difficulty, setDifficulty, feedback, changeFeedbackToggle\r\nconst InfoBox = (props) => {\r\n  const { difficulty, feedback, dispatch } = props;\r\n  const difficultyLevels = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\r\n\r\n  return (\r\n    <div className=\"info-box\">\r\n      <div className=\"app-container\">\r\n        <div>\r\n          <div className=\"info-item\">\r\n            <label className=\"label\">Select your difficulty level:</label>\r\n            <div className=\"drop-down\">\r\n              <button className=\"drop-down-selection\">{difficulty}</button>\r\n              <div className=\"drop-down-content\">\r\n                {difficultyLevels.map((level) => {\r\n                  return (\r\n                    <button\r\n                      className=\"option\"\r\n                      key={level}\r\n                      value={level}\r\n                      onClick={(e) => {\r\n                        dispatch(setDifficulty(level));\r\n                      }}\r\n                    >\r\n                      {level}\r\n                    </button>\r\n                  );\r\n                })}\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className=\"info-item\">\r\n            <label className=\"label\">\r\n              Would you like real-time feedback as you play?\r\n            </label>\r\n            <div className=\"toggle\">Yes\r\n              <input\r\n                className='radio-button'\r\n                type=\"radio\"\r\n                name=\"feedback\"\r\n                id=\"yes\"\r\n                checked={feedback}\r\n                onChange={(e) => {\r\n                  if (e.target.value === \"yes\") dispatch(setFeedback(true));\r\n                }}\r\n                value=\"yes\"\r\n              />\r\n            </div>\r\n            <div className=\"toggle\">\r\n              No\r\n              <input\r\n                className='radio-button'\r\n                type=\"radio\"\r\n                name=\"feedback\"\r\n                value=\"no\"\r\n                id=\"no\"\r\n                checked={!feedback}\r\n                onChange={(e) => {\r\n                  if (e.target.value === \"no\") dispatch(setFeedback(false));\r\n                }}\r\n              />\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nInfoBox.propTypes = {\r\n  difficulty: PropTypes.number.isRequired,\r\n  feedback: PropTypes.bool.isRequired,\r\n};\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    difficulty: state.infoState.difficulty,\r\n    feedback: state.infoState.feedback,\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps)(InfoBox);\r\n\r\n// onChange={e => {\r\n//   dispatch(setDifficulty(e.value))\r\n","import React from \"react\";\r\nimport Tools from \"./Tools\";\r\nimport Board from \"./Board\";\r\nimport InfoBox from \"./InfoBox\";\r\n\r\nimport \"../styles/App.css\";\r\n\r\nclass App extends React.Component {\r\n\r\n  render() {\r\n    return (\r\n      <section className='app-body'>\r\n        <Tools />\r\n        <Board />\r\n        <InfoBox />\r\n      </section>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport \"../styles/Navbar.css\";\r\n\r\nconst Navbar = (props) => {\r\n  const { loggedIn } = props;\r\n  return (\r\n    <div className=\"app-container\">\r\n      <div className=\"navbar-container\">\r\n        <div className=\"nav-list\">\r\n          <div className=\"list-item\">\r\n            <NavLink\r\n              to=\"/\"\r\n              className=\"nav-link\"\r\n              activeClassName=\"selected\"\r\n              exact={true}\r\n            >\r\n              Game\r\n            </NavLink>\r\n          </div>\r\n          {!loggedIn && (\r\n            <div className=\"list-item\">\r\n              <NavLink\r\n                to=\"/signup\"\r\n                className=\"nav-link\"\r\n                activeClassName=\"selected\"\r\n              >\r\n                Sign up\r\n              </NavLink>\r\n            </div>\r\n          )}\r\n          {!loggedIn && (\r\n            <div className=\"list-item\">\r\n              <NavLink\r\n                to=\"/login\"\r\n                className=\"nav-link\"\r\n                activeClassName=\"selected\"\r\n              >\r\n                Login\r\n              </NavLink>\r\n            </div>\r\n          )}\r\n          {loggedIn && (\r\n            <div className=\"list-item\">\r\n              <NavLink\r\n                to=\"/profile\"\r\n                className=\"nav-link\"\r\n                activeClassName=\"selected\"\r\n              >\r\n                Your profile\r\n              </NavLink>\r\n            </div>\r\n          )}\r\n          <div className=\"list-item\">\r\n            <NavLink\r\n              to=\"/leaderboard\"\r\n              className=\"nav-link\"\r\n              activeClassName=\"selected\"\r\n            >\r\n              Leaderboard\r\n            </NavLink>\r\n          </div>\r\n          <div className=\"list-item\">\r\n            <NavLink\r\n              to=\"/how-to-play\"\r\n              className=\"nav-link\"\r\n              activeClassName=\"selected\"\r\n            >\r\n              How to play\r\n            </NavLink>\r\n          </div>\r\n          <div className=\"list-item\">\r\n            <NavLink\r\n              to=\"/donate\"\r\n              className=\"nav-link\"\r\n              activeClassName=\"selected\"\r\n            >\r\n              Donate!\r\n            </NavLink>\r\n          </div>\r\n          {loggedIn && (\r\n            <div className=\"list-item\">\r\n              <NavLink to=\"/logout\" className=\"nav-link\" activeClassName=\"selected\">\r\n                Logout\r\n              </NavLink>\r\n            </div>\r\n          )}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Navbar;\r\n","import React from \"react\";\r\nimport Navbar from \"./Navbar\";\r\nimport \"../styles/Banner.css\";\r\n\r\nconst Banner = (props) => {\r\n  const { loggedIn } = props;\r\n  return (\r\n    <header>\r\n      <div className=\"app-container\">\r\n        <div className='header__container'>\r\n          <h1 className=\"header-title\">Classic Sudoku</h1>\r\n          <h2 className=\"header-subtitle\">Start playing straight away!</h2>\r\n        </div>\r\n      </div>\r\n      <Navbar loggedIn={loggedIn} />\r\n    </header>\r\n  );\r\n};\r\nexport default Banner;\r\n","import React from \"react\";\r\nimport \"../styles/Footer.css\";\r\n\r\nconst Footer = () => {\r\n  return (\r\n    <footer className=\"footer\">\r\n      <div className=\"app-container footer-text\">©2020</div>\r\n    </footer>\r\n  );\r\n};\r\n\r\nexport default Footer;\r\n","import React from 'react'\r\nimport '../styles/Loader.css'\r\n\r\nconst Loader = (props) => {\r\n  return (\r\n    <div className='loader__container'>\r\n      <div className='loader'></div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Loader","\r\n\r\nexport const setEmailField = (value) => {\r\n  return {\r\n    type: 'SET_EMAIL',\r\n    email: value\r\n  }\r\n}\r\n\r\nexport const setUsernameField = (value) => {\r\n  return {\r\n    type: 'SET_USERNAME',\r\n    username: value\r\n  }\r\n}\r\n\r\nexport const setPasswordField = (value) => {\r\n  return {\r\n    type: 'SET_PASSWORD',\r\n    password: value\r\n  }\r\n}\r\n\r\nexport const setErrorField = (payload) => {\r\n  return {\r\n    type: 'SET_ERROR_FIELD',\r\n    payload\r\n  }\r\n}\r\n\r\nexport const removeErrorField = () => {\r\n  return {\r\n    type: 'REMOVE_ERROR_FIELD',\r\n  }\r\n}\r\n\r\nexport const Loading = () => {\r\n  return {\r\n    type: 'IS_LOADING'\r\n  }\r\n}\r\n\r\nexport const hasLoaded = () => {\r\n  return {\r\n    type: 'HAS_LOADED'\r\n  }\r\n}","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport Loader from '../components/Loader'\r\nimport {\r\n  setEmailField,\r\n  setUsernameField,\r\n  setPasswordField,\r\n  setErrorField,\r\n  removeErrorField,\r\n  Loading,\r\n  hasLoaded\r\n} from \"../redux/actions/signupActions\";\r\nimport \"../styles/Signup.css\";\r\nimport axios from \"axios\";\r\nimport validator from 'validator';\r\n\r\n//state for email/username/password\r\n\r\nconst Signup = (props) => {\r\n  const { signupState, dispatch } = props;\r\n  const { error, email, password, username, isLoading } = signupState;\r\n\r\n  const setEmail = (e) => {\r\n    dispatch(setEmailField(e.target.value));\r\n  };\r\n  const setUsername = (e) => {\r\n    dispatch(setUsernameField(e.target.value));\r\n  };\r\n  const setPassword = (e) => {\r\n    dispatch(setPasswordField(e.target.value));\r\n  };\r\n  const onSubmit = async (e) => {\r\n    e.preventDefault();\r\n\r\n    if (!validator.isEmail(email)) {\r\n      return dispatch(setErrorField('Please use a valid email address'))\r\n    } else if (password.length < 6) {\r\n      return dispatch(setErrorField('Please use a password longer than 6 characters'))\r\n    } else if (password.toLowerCase().includes('password')) {\r\n      return dispatch(setErrorField('Your password cannot contain the \"password\"'))\r\n    }\r\n\r\n    const requestField = {\r\n      email: email,\r\n      username: username,\r\n      password: password,\r\n    };\r\n\r\n    try {\r\n      dispatch(Loading())\r\n      const response = await axios.post('/api/users/register', requestField)\r\n      if (response.data.success) {\r\n        dispatch(hasLoaded())\r\n        dispatch(removeErrorField())\r\n        alert('Successfully registered! Taking you to the login page')\r\n        props.history.push('/login')\r\n      }\r\n    } catch (e) {\r\n      dispatch(hasLoaded())\r\n      const { data } = e.response\r\n      if(data.error.includes('email')) {\r\n\r\n        dispatch(setErrorField('This email is already in use or not valid, please use a different email'))\r\n      } else if(data.error.includes('username')) {\r\n        dispatch(setErrorField('This username has already been taken. Please choose a different username'))\r\n      } else {\r\n        dispatch(setErrorField('Error registering. Please try again.'))\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"app-body\">\r\n      <div className=\"app-container\">\r\n        <div className=\"header\">\r\n          <h1 className=\"signup-header\">Welcome - It's good to see you!</h1>\r\n          <h2 className=\"signup-subtitle\">Let's get you registered!</h2>\r\n          <h3 className=\"signup-subtitle-second\">\r\n            this way we can track your wins, best times and more!\r\n          </h3>\r\n        </div>\r\n        <div className=\"form-container\">\r\n          <form onSubmit={onSubmit}>\r\n            <label className=\"label\">Email address</label>\r\n            <input\r\n              className=\"field\"\r\n              placeholder=\"e.g abc@hotmail.com\"\r\n              value={signupState.email}\r\n              onChange={setEmail}\r\n            ></input>\r\n            <label className=\"label\">Username</label>\r\n            <input\r\n              className=\"field\"\r\n              placeholder=\"Choose your user id. e.g sudokumeister1337\"\r\n              value={signupState.username}\r\n              onChange={setUsername}\r\n            ></input>\r\n            <label className=\"label\">Password</label>\r\n            <input\r\n              type=\"password\"\r\n              className=\"field\"\r\n              placeholder=\"Must be minimum 8 characters length\"\r\n              value={signupState.password}\r\n              onChange={setPassword}\r\n            ></input>\r\n            {error && (\r\n              <div className=\"error-container\">\r\n                <label>{error}</label>\r\n              </div>\r\n            )}\r\n            <div className=\"submit-button-container\">\r\n              <button type=\"submit\" className=\"submit-button\">\r\n                Sign up!\r\n              </button>\r\n            </div>\r\n          </form>\r\n        </div>\r\n        {isLoading && <Loader />}\r\n      </div>\r\n    </div>\r\n    \r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    signupState: state.signupState,\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps)(Signup);\r\n","import React, { useState } from \"react\";\r\nimport \"../styles/Login.css\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport { connect } from 'react-redux'\r\nimport Loader from '../components/Loader'\r\nimport axios from \"axios\";\r\nimport { Loading, hasLoaded } from '../redux/actions/signupActions'\r\n\r\n// randomly using hooks for state rather than redux learning purposes\r\n\r\nconst Login = (props) => {\r\n  const { dispatch } = props\r\n  const { isLoading } = props.signUpState\r\n  const [email, SetEmail] = useState(\"\");\r\n  const [password, SetPassword] = useState(\"\");\r\n  const [error, SetError] = useState(\"\");\r\n\r\n  const setEmail = (e) => {\r\n    SetEmail(e.target.value);\r\n  };\r\n\r\n  const setPassword = (e) => {\r\n    SetPassword(e.target.value);\r\n  };\r\n  const onSubmit = async (e) => {\r\n    e.preventDefault();\r\n\r\n    const formData = {\r\n      email: email,\r\n      password: password,\r\n    };\r\n\r\n    try {\r\n      dispatch(Loading())\r\n      await axios.post(\"/api/users/login\", formData);\r\n      SetError(\"\");\r\n      dispatch(hasLoaded())\r\n      props.history.push(\"/\");\r\n      window.location.reload();\r\n    } catch (e) {\r\n      dispatch(hasLoaded())\r\n      SetError(e.response.data.error);\r\n      alert(\"Could not find email/password combination. Please try again\");\r\n    }\r\n    return\r\n  };\r\n\r\n  return (\r\n    <div className=\"app-body\">\r\n      <div className=\"app-container\">\r\n        <div className=\"title-container\">\r\n          <h1 className=\"login-header\">Login page</h1>\r\n          <h2 className=\"login-subheader\">Sign in!</h2>\r\n        </div>\r\n        <div className=\"form-container\">\r\n          <form onSubmit={onSubmit}>\r\n            <label className=\"label\">Email</label>\r\n            <input className=\"field\" onChange={setEmail}></input>\r\n            <label className=\"label\">Password</label>\r\n            <input\r\n              className=\"field\"\r\n              type=\"password\"\r\n              onChange={setPassword}\r\n            ></input>\r\n            <button type=\"submit\" className='submit-button'>Login</button>\r\n          </form>\r\n          {error && <div className='error_container'><label>Could not find email/password combination. Please try again.</label></div>}\r\n        </div>\r\n        <p className=\"display-signup\">\r\n          Need to sign up first? click <NavLink to=\"/signup\">here</NavLink> to\r\n          take you to the sign up page\r\n        </p>\r\n        {isLoading && <Loader />}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    signUpState: state.signupState,\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps)(Login);\r\n","import React from \"react\";\r\nimport axios from \"axios\";\r\nimport \"../styles/ProfileCard.css\";\r\n\r\nclass ProfileCard extends React.Component {\r\n  state = {\r\n    loaded: true,\r\n    error: undefined,\r\n    email: undefined,\r\n    username: undefined,\r\n    description: undefined,\r\n    avatarFile: undefined,\r\n    avatarURL: undefined,\r\n    scoreCard: undefined\r\n  };\r\n  setAvatarState = (e) => {\r\n    this.setState({\r\n      avatarFile: e.target.files[0]\r\n    })\r\n  };\r\n  handleAvatarUpload = async () => {\r\n    const formData = new FormData()\r\n    formData.append('avatar', this.state.avatarFile)\r\n    try {\r\n      const response = await axios.post('/api/users/me/avatar', formData)\r\n      if(response.data.success) {\r\n        this.setState({\r\n          avatarFile: undefined,\r\n          error: undefined\r\n        })\r\n      }\r\n    } catch (e) {\r\n      this.setState({\r\n        avatarFile: undefined,\r\n        error: e.response.data.error\r\n      })\r\n    }\r\n  }\r\n  componentDidMount = () => {\r\n    this.fetchProfile()\r\n  }\r\n  componentDidUpdate = () => {\r\n    if (this.state.avatarFile) {\r\n      this.handleAvatarUpload()\r\n      this.fetchProfile()\r\n    }\r\n  }\r\n\r\n  fetchProfile = async () => {\r\n    try {\r\n      // dont need to call /me, can call score end point and populate it with user data\r\n      const response = await axios.get(\"api/scores/my-score\");\r\n      const avatarUrl = `/api/users/me/avatar`\r\n      if (response.data.success) {\r\n        this.setState((state) => {\r\n          return {\r\n            loaded: true,\r\n            error: undefined,\r\n            email: response.data.email,\r\n            username: response.data.username,\r\n            avatarFile: undefined,\r\n            avatarURL: avatarUrl,\r\n            scoreCard: response.data.scoreCard\r\n          };\r\n        });\r\n      }\r\n    } catch (e) {\r\n      this.setState((state) => ({\r\n        loaded: false,\r\n        avatarFile: undefined,\r\n        email: undefined,\r\n        username: undefined,\r\n        error: e.message,\r\n      }));\r\n    }\r\n  };\r\n  renderLoader = () => {\r\n    return <div>FETCHING YOUR PROFILE NOW</div>;\r\n  };\r\n  renderProfile = () => {\r\n    return (\r\n      <div className=\"profile-card\">\r\n        <div className=\"top-card\"></div>\r\n        <div className=\"image-container\">\r\n          <div className=\"image-upload\">\r\n            <label htmlFor=\"file-input\">\r\n              <img src={this.state.avatarURL} />\r\n            </label>\r\n            <input\r\n              type=\"file\"\r\n              id=\"file-input\"\r\n              name=\"file\"\r\n              onChange={this.setAvatarState}\r\n            />\r\n          </div>\r\n        </div>\r\n        <div className=\"card-content\">\r\n          <h1>{this.state.username}</h1>\r\n          <h2>{this.state.email}</h2>\r\n          <h3>{this.state.description}</h3>\r\n        </div>\r\n        <div className=\"contact-details\">\r\n          <div>test</div>\r\n          <div>test</div>\r\n          <div>test</div>\r\n        </div>\r\n        {this.state.error && (\r\n          <div>{this.state.error}</div>\r\n        )}\r\n      </div>\r\n    );\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <React.Fragment>\r\n        {!this.state.loaded && this.renderLoader()}\r\n        {this.state.loaded && this.renderProfile()}\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ProfileCard;\r\n","import React from \"react\";\r\nimport ProfileCard from \"./ProfileCard\";\r\n\r\nconst ProfilePage = (props) => {\r\n  const { loggedIn } = props;\r\n  const renderProfile = () => {\r\n    return (\r\n        <ProfileCard />\r\n    )\r\n  };\r\n  const renderLoginNotice = () => {\r\n    return <div>Please login to continue</div>;\r\n  };\r\n  return (\r\n    <div className=\"app-body\">\r\n      <div className=\"app-container\">\r\n        {loggedIn && renderProfile()}\r\n        {!loggedIn && renderLoginNotice()}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ProfilePage;\r\n","import React from \"react\";\r\nimport \"../styles/TipTile.css\";\r\n\r\nconst TipTile = (props) => {\r\n  const { title, description } = props;\r\n  return (\r\n    <div className=\"main__container\">\r\n      <div className=\"card__container\">\r\n        <div className=\"card__front\">\r\n          <div className=\"text-content\">\r\n            <div className=\"title-content\">{title}</div>\r\n          </div>\r\n        </div>\r\n        <div className=\"card__back\">\r\n          <div className=\"text-content\">{description}</div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nexport default TipTile;\r\n","import React from 'react';\r\n\r\nconst headerStyles = {\r\n    color: '#E85A4F',\r\n}\r\n\r\nexport default {\r\n    tip1: {\r\n        title: <h1 style={headerStyles}>Tip one</h1>,\r\n        tip: <p>All 3x3 mini squares, all rows and all columns must contain the numbers 1-9. <br/> No duplicates allowed!</p>\r\n    },\r\n    tip2: {\r\n        title: <h1 style={headerStyles}>Tip two</h1>,\r\n        tip: <p>Look for the most filled out columns/rows/mini-squares first</p>\r\n    },\r\n    tip3: {\r\n        title: <h1 style={headerStyles}>Tip three</h1>,\r\n        tip: <p>Figure out the potential possibilities in each square. Eventually, you'll narrow each square down to only one possible number!</p>\r\n    },\r\n    tip4: {\r\n        title: <h1 style={headerStyles}>Tip four</h1>,\r\n        tip: <p>Be patient and try and solve the puzzle yourself before looking at the solution. Thats the only way to get better!</p>\r\n    }\r\n}","import React from \"react\";\r\nimport TipTile from \"./TipTile\";\r\nimport \"../styles/HelpLayout.css\";\r\nimport tipsData from \"../data/TipsData/index\";\r\n\r\nconst HelpLayout = () => {\r\n  return (\r\n    <div className=\"app-body\">\r\n      <div className=\"app-container\">\r\n        <div className=\"how-to__container\">Mouse over tips to reveal them</div>\r\n        <div className=\"tips__container\">\r\n          {Object.keys(tipsData).map((key, index) => {\r\n            const data = tipsData[key];\r\n            return (\r\n              <TipTile key={index} title={data.title} description={data.tip} />\r\n            );\r\n          })}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default HelpLayout;\r\n","import React from \"react\";\r\nimport { CardElement } from \"@stripe/react-stripe-js\";\r\nimport \"../styles/CardSection.css\";\r\n\r\nconst cardElementOptions = {\r\n  style: {\r\n    base: {\r\n      color: \"#32325d\",\r\n      fontFamily: '\"Helvetica Neue\", Helvetica, sans-serif',\r\n      fontSmoothing: \"antialiased\",\r\n      fontSize: \"16px\",\r\n      \"::placeholder\": {\r\n        color: \"#aab7c4\",\r\n      },\r\n    },\r\n    invalid: {\r\n      color: \"#fa755a\",\r\n      iconColor: \"#fa755a\",\r\n    },\r\n  },\r\n};\r\n\r\nconst CardSection = (props) => {\r\n  return (\r\n    <React.Fragment>\r\n      <label className='donate-label'>If you'd like to donate, you can do so with a debit or credit card below</label>\r\n      <CardElement style={cardElementOptions} />\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default CardSection;\r\n","import React from \"react\";\r\nimport CardSection from \"./CardSection\";\r\nimport { useStripe, useElements, CardElement } from \"@stripe/react-stripe-js\";\r\nimport axios from \"axios\";\r\nimport \"../styles/CardForm.css\";\r\n\r\nconst CardForm = (props) => {\r\n  const stripe = useStripe();\r\n  const elements = useElements();\r\n\r\n  const onSubmit = async (e) => {\r\n    e.preventDefault();\r\n\r\n    if (!stripe || !elements) {\r\n      return;\r\n    }\r\n\r\n    try {\r\n      const response = await axios.get(\"/api/payments/secret\");\r\n      const client_secret = response.data.client_secret;\r\n      const result = await stripe.confirmCardPayment(`${client_secret}`, {\r\n        payment_method: {\r\n          card: elements.getElement(CardElement),\r\n          billing_details: {\r\n            name: 'paul'\r\n          }\r\n        }\r\n      })\r\n      if (result.error) {\r\n        alert('failed to pay')\r\n      } else {\r\n        if (result.paymentIntent.status === 'succeeded') {\r\n          alert('success')\r\n        }\r\n      }\r\n      \r\n    } catch (e) {\r\n      alert(\"unable to pay\");\r\n    }\r\n  };\r\n  return (\r\n    <form className=\"checkout__form__container\" onSubmit={onSubmit}>\r\n      <CardSection />\r\n      <button type=\"submit\" className='submit-button-stripe' disabled={!stripe}>\r\n        Confirm payment\r\n      </button>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default CardForm;\r\n","import React from \"react\";\r\nimport CardForm from \"./CardForm\";\r\n\r\nconst DonatePage = (props) => {\r\n  return (\r\n    <div className=\"app-body\">\r\n      <div className=\"app-container\">\r\n        <CardForm />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nexport default DonatePage;\r\n","import React from \"react\";\r\nimport axios from 'axios'\r\nimport '../styles/Logout.css'\r\n\r\nconst Logout = (props) => {\r\n  const handleLogout = async () => {\r\n    try {\r\n      axios.post('/api/users/logout')\r\n      props.history.push('/')\r\n      window.location.reload()\r\n    } catch(e) {\r\n      alert(`Sorry, you're stuck logged in!`)\r\n    }\r\n  }\r\n  const handleCancelLogout = () => {\r\n    props.history.push('/')\r\n  }\r\n  return (\r\n    <div className=\"app-body\">\r\n      <div className=\"app-container\"></div>\r\n      <div className='logout-label'>Are you sure you wish to logout?</div>\r\n      <div className='logout-buttons__container'>\r\n        <button onClick={handleLogout}>Yes</button>\r\n        <button onClick={handleCancelLogout}>No</button>\r\n      </div>\r\n\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Logout;\r\n","import React from \"react\";\r\n\r\nconst LeaderboardRow = (props) => {\r\n  const { rank, userName, wins } = props;\r\n  return (\r\n    <tr>\r\n      <td>{rank}</td>\r\n      <td>{userName}</td>\r\n      <td>{wins}</td>\r\n    </tr>\r\n  );\r\n};\r\n\r\nexport default LeaderboardRow;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { connect } from 'react-redux'\r\nimport axios from \"axios\";\r\nimport \"../styles/Leaderboard.css\";\r\nimport Loader from \"./Loader\";\r\nimport LeaderboardRow from './LeaderboardRow'\r\nimport { setPlayerScores, setFilter } from '../redux/actions/playerScoreActions'\r\nimport filterPlayerScores from '../utils/filterPlayerScores/filterPlayerScores'\r\n\r\nconst Leaderboard = (props) => {\r\n  const { dispatch, playerScores } = props\r\n\r\n  const [loaded, setLoaded] = useState(false);\r\n  \r\n  \r\n  const fetchLeaderboard = async () => {\r\n    try {\r\n      const response = await axios.get(\"/api/scores/leaderboard\");\r\n      const filteredScores = filterLeaderboardScoresByRank(response.data.userData)\r\n      const rankedFilteredScores = filteredScores.map((player, index) => {\r\n        return {\r\n          ...player,\r\n          rank: index + 1\r\n        }\r\n      })\r\n      dispatch(setPlayerScores([...rankedFilteredScores]))\r\n      return setLoaded(true)\r\n    } catch (e) {\r\n    \r\n    }\r\n  };\r\n  const filterLeaderboardScoresByRank = (scores) => {\r\n    const filteredScores = scores.filter((score) => score.wins > 0).sort((a, b) => b.wins - a.wins)\r\n    return filteredScores\r\n  }\r\n\r\n  const handlePlayerFilter = (e) => {\r\n    const value = e.target.value\r\n    dispatch(setFilter(value))\r\n  }\r\n\r\n  useEffect(() => {\r\n    fetchLeaderboard();\r\n  }, []);\r\n  \r\n  return (\r\n    <div className=\"app-body\">\r\n      <div className=\"app-container\">\r\n        {!loaded && (\r\n          <div className=\"loader-placement\">\r\n            <Loader />\r\n          </div>\r\n        )}\r\n        {loaded && (\r\n          <section className=\"leaderboard__container\">\r\n            <div className=\"header__container\">\r\n              <h1 className=\"leaderboard-header\">Leaderboard</h1>\r\n              <h3 className=\"leaderboard-subtitle\">\r\n                This is the leaderboard for most wins. Only difficulty levels of\r\n                10 are considered in the leaderboard.\r\n              </h3>\r\n            </div>\r\n            <div className=\"leaderboard-table__container\">\r\n              <nav className=\"search\">\r\n                <div className=\"search-title\">\r\n                  <h1>Current Standings</h1>\r\n                </div>\r\n                <div className=\"search-bar\">\r\n                  <input type=\"search\" placeholder=\"Search player...\" onChange={handlePlayerFilter}></input>\r\n                </div>\r\n              </nav>\r\n              <table className='leaderboard-table'>\r\n                <thead>\r\n                  <tr>\r\n                    <th>Rank</th>\r\n                    <th>Player</th>\r\n                    <th>Wins</th>\r\n                  </tr>\r\n                </thead>\r\n                <tbody>\r\n                  {playerScores?.map((user, index) => {\r\n                    return <LeaderboardRow rank={user.rank} userName={user.userName} key={index} wins={user.wins}/>\r\n                  })}\r\n                </tbody>\r\n              </table>\r\n            </div>\r\n          </section>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  const playerScoreState = state.playerScoresState\r\n  return {\r\n    playerScores: filterPlayerScores(playerScoreState.userScores, playerScoreState.nameFilter)\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps)(Leaderboard);\r\n","export default (playerScores, nameFilter) => {\r\n  if (!nameFilter) {\r\n    return playerScores\r\n  }\r\n  const filteredScores = playerScores.filter((scores) => scores.userName.includes(nameFilter))\r\n  return filteredScores\r\n}","export const setPlayerScores = (scores) => {\r\n  return {\r\n    type: 'SET_PLAYER_SCORES',\r\n    scores\r\n  }\r\n}\r\n\r\nexport const setFilter = (playerName) => {\r\n  return {\r\n    type: 'SET_PLAYER_FILTER',\r\n    playerName\r\n  }\r\n}\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { BrowserRouter, Route, Switch } from \"react-router-dom\";\r\nimport axios from 'axios'\r\nimport App from \"../components/App\";\r\nimport Banner from \"../components/Banner\";\r\nimport Footer from \"../components/Footer\";\r\nimport Signup from \"../components/Signup\";\r\nimport Login from \"../components/Login\";\r\nimport ProfilePage from \"../components/ProfilePage\";\r\nimport HelpLayout from '../components/HelpLayout'\r\nimport DonatePage from '../components/DonatePage'\r\nimport Logout from '../components/Logout'\r\nimport Leaderboard from '../components/Leaderboard'\r\nimport \"../styles/App.css\";\r\n\r\n\r\nconst AppRouter = () => {\r\n  // useEffect call auth get route, if successful setState (have to use redux to dispatch to store) auth == true, pass auth prop down to Banner (navbar)\r\n  // axios.get(/api/users/auth, withCredentials: true)\r\n  const [isAuth, setAuthStatus] = useState(false)\r\n\r\n  const isLoggedIn = async () => {\r\n\r\n    try {\r\n      const result = await axios.get('/api/users/auth', { withCredentials: true})\r\n      if (result.data.isAuth) {\r\n        setAuthStatus(true)\r\n      }\r\n    } catch (e) {\r\n      setAuthStatus(false)\r\n    }\r\n  }\r\n  useEffect(() => {\r\n    isLoggedIn()\r\n  })\r\n\r\n  return (\r\n    <BrowserRouter>\r\n      <div className=\"app\">\r\n        <Banner loggedIn={isAuth}/>\r\n        <Switch>\r\n          <Route exact path=\"/\" component={App} />\r\n          <Route path=\"/signup\" component={Signup} />\r\n          <Route path=\"/login\" component={Login} />\r\n          <Route path='/profile' render={(props) => <ProfilePage {...props} loggedIn={isAuth}/>}/>\r\n          <Route path='/how-to-play' component={HelpLayout}/>\r\n          <Route path='/donate' component={DonatePage}/>\r\n          <Route path='/leaderboard' component={Leaderboard} />\r\n          <Route path='/logout' component={Logout} />\r\n        </Switch>\r\n        <Footer />\r\n      </div>\r\n    </BrowserRouter>\r\n  );\r\n};\r\n\r\nexport default AppRouter;\r\n","\r\nexport default array => {\r\n  for (let i = array.length - 1; i > 0; i--) {\r\n    const j = Math.floor(Math.random() * (i + 1));\r\n    [array[i], array[j]] = [array[j], array[i]];\r\n  }\r\n};\r\n","export default ({ grid, col, number }) => {\r\n  for (let i = 0; i < 9; i++) {\r\n    if (grid[i][col] === number) {\r\n      return true;\r\n    }\r\n  }\r\n  return false;\r\n};","export default ({ grid, row, number }) => {\r\n  if (grid[row].includes(number)) {\r\n    return true;\r\n  }\r\n  return false;\r\n};","export default ({ grid, row, col }) => {\r\n  const square = [];\r\n  if (row < 3) {\r\n    if (col < 3) {\r\n      for (let i = 0; i < 3; i++) {\r\n        square.push([grid[i][0], grid[i][1], grid[i][2]]);\r\n      }\r\n    } else if (col < 6) {\r\n      for (let i = 0; i < 3; i++) {\r\n        square.push([grid[i][3], grid[i][4], grid[i][5]]);\r\n      }\r\n    } else {\r\n      for (let i = 0; i < 3; i++) {\r\n        square.push([grid[i][6], grid[i][7], grid[i][8]]);\r\n      }\r\n    }\r\n  } else if (row < 6) {\r\n    if (col < 3) {\r\n      for (let i = 3; i < 6; i++) {\r\n        square.push([grid[i][0], grid[i][1], grid[i][2]]);\r\n      }\r\n    } else if (col < 6) {\r\n      for (let i = 3; i < 6; i++) {\r\n        square.push([grid[i][3], grid[i][4], grid[i][5]]);\r\n      }\r\n    } else {\r\n      for (let i = 3; i < 6; i++) {\r\n        square.push([grid[i][6], grid[i][7], grid[i][8]]);\r\n      }\r\n    }\r\n  } else {\r\n    if (col < 3) {\r\n      for (let i = 6; i < 9; i++) {\r\n        square.push([grid[i][0], grid[i][1], grid[i][2]]);\r\n      }\r\n    } else if (col < 6) {\r\n      for (let i = 6; i < 9; i++) {\r\n        square.push([grid[i][3], grid[i][4], grid[i][5]]);\r\n      }\r\n    } else {\r\n      for (let i = 6; i < 9; i++) {\r\n        square.push([grid[i][6], grid[i][7], grid[i][8]]);\r\n      }\r\n    }\r\n  }\r\n  return square;\r\n};","export default ({ square, number }) => {\r\n  return [...square[0], ...square[1], ...square[2]].includes(number);\r\n};","  // check if grid is full (non-zero values)\r\n export default (grid) => {\r\n    for (let i = 0; i < 9; i++) {\r\n      for (let j = 0; j < 9; j++) {\r\n        if (grid[i][j] === 0) {\r\n          return false;\r\n        }\r\n      }\r\n    }\r\n    return true;\r\n  };","import shuffle from \"../shuffle/shuffle\";\r\nimport isInCol from \"../isInCol/isInCol\";\r\nimport isInRow from \"../isInRow/isInRow\";\r\nimport identifyWorkingSquare from \"../identifyWorkingSquare/identifyWorkingSquare\";\r\nimport isInSquare from \"../isInSquare/isInSquare\";\r\nimport checkGrid from \"../checkGrid/checkGrid\";\r\n\r\n\r\nfunction fillGrid(grid) {\r\n  var nums = [1, 2, 3, 4, 5, 6, 7, 8, 9]\r\n  let row = 0\r\n  let col = 0\r\n\r\n  for (let i = 0; i < 81; i++) {\r\n    \r\n    row = Math.floor(i / 9)\r\n    col = i % 9\r\n\r\n    if (grid[row][col] === 0) {\r\n      shuffle(nums)\r\n      \r\n      for (let number of nums) {\r\n        if (!isInRow({ grid, row, number })) {\r\n          if (!isInCol({ grid, col, number })) {\r\n            const square = identifyWorkingSquare({ grid, row, col })\r\n            if (!isInSquare({ square, number })) {\r\n              grid[row][col] = number\r\n              if (checkGrid(grid)) return true \r\n              else if (fillGrid(grid)) return true\r\n            }\r\n          }\r\n        }\r\n      }\r\n      break\r\n    }\r\n  }\r\n  grid[row][col] = 0\r\n}\r\n\r\nexport default fillGrid;\r\n","import fillGrid from '../fillGrid/fillGrid'\r\n\r\nfunction createFullGrid() {\r\n  const grid = [\r\n    [0, 0, 0, 0, 0, 0, 0, 0, 0],\r\n    [0, 0, 0, 0, 0, 0, 0, 0, 0],\r\n    [0, 0, 0, 0, 0, 0, 0, 0, 0],\r\n    [0, 0, 0, 0, 0, 0, 0, 0, 0],\r\n    [0, 0, 0, 0, 0, 0, 0, 0, 0],\r\n    [0, 0, 0, 0, 0, 0, 0, 0, 0],\r\n    [0, 0, 0, 0, 0, 0, 0, 0, 0],\r\n    [0, 0, 0, 0, 0, 0, 0, 0, 0],\r\n    [0, 0, 0, 0, 0, 0, 0, 0, 0]\r\n  ];\r\n  fillGrid(grid);\r\n\r\n  return grid;\r\n};\r\n\r\nexport default createFullGrid","\r\nfunction copyGrid (grid) {\r\n  const gridCopy = [\r\n    [0, 0, 0, 0, 0, 0, 0, 0, 0],\r\n    [0, 0, 0, 0, 0, 0, 0, 0, 0],\r\n    [0, 0, 0, 0, 0, 0, 0, 0, 0],\r\n    [0, 0, 0, 0, 0, 0, 0, 0, 0],\r\n    [0, 0, 0, 0, 0, 0, 0, 0, 0],\r\n    [0, 0, 0, 0, 0, 0, 0, 0, 0],\r\n    [0, 0, 0, 0, 0, 0, 0, 0, 0],\r\n    [0, 0, 0, 0, 0, 0, 0, 0, 0],\r\n    [0, 0, 0, 0, 0, 0, 0, 0, 0]\r\n  ]\r\n  for (let r = 0; r < 9; r++) {\r\n    for (let c = 0; c < 9; c++) {\r\n      gridCopy[r][c] = grid[r][c]\r\n    }\r\n  }\r\n  return gridCopy\r\n}\r\n\r\nexport default copyGrid","export default {\r\n  counter: 0,\r\n}","\r\n\r\n  function getRandomIndex()  {\r\n    return Math.floor(Math.random() * 9)\r\n  }\r\n\r\n  export default getRandomIndex","import global from '../../global/index'\r\nimport isInRow from '../isInRow/isInRow'\r\nimport isInCol from '../isInCol/isInCol'\r\nimport identifyWorkingSquare from '../identifyWorkingSquare/identifyWorkingSquare'\r\nimport isInSquare from '../isInSquare/isInSquare'\r\nimport checkGrid from '../checkGrid/checkGrid'\r\n\r\n\r\nfunction solveGrid(grid) {\r\n\r\n  const numbers = [1, 2, 3, 4, 5, 6, 7, 8, 9]\r\n  let row = 0\r\n  let col = 0\r\n\r\n  for (let i = 0; i < 81; i++) {\r\n    row = Math.floor(i / 9)\r\n    col = i % 9\r\n\r\n    if (grid[row][col] === 0) {\r\n      for (let number of numbers) {\r\n        if (!isInRow({ grid, row, number})) {\r\n          if (!isInCol({ grid, col, number })) {\r\n            const square = identifyWorkingSquare({ grid, row, col })\r\n            if (!isInSquare({ square, number })) {\r\n              grid[row][col] = number\r\n              if (checkGrid(grid)) {\r\n                global.counter++\r\n                break\r\n              }\r\n              else if (solveGrid(grid)) return true\r\n            }\r\n          }\r\n        }\r\n      }\r\n      break\r\n    }\r\n  }\r\n}\r\nexport default solveGrid","import global from '../../global/index'\r\nimport getRandomIndex from '../getRandomIndex/getRandomIndex'\r\nimport copyGrid from '../copyGrid/copyGrid'\r\nimport solveGrid from '../solveGrid/solveGrid'\r\n\r\n\r\nfunction removeNumbers(grid, attempts = 5) {\r\n  while (attempts > 0) {\r\n    let row = getRandomIndex()\r\n    let col = getRandomIndex()\r\n\r\n    while (grid[row][col] === 0) {\r\n      row = getRandomIndex()\r\n      col = getRandomIndex()\r\n    }\r\n    const backup = grid[row][col];\r\n    grid[row][col] = 0\r\n    \r\n    const gridCopy = copyGrid(grid);\r\n\r\n    global.counter = 0\r\n    solveGrid(gridCopy);\r\n\r\n    if (global.counter !== 1) {\r\n      grid[row][col] = backup;\r\n      attempts--\r\n    }\r\n  }\r\n  return grid;\r\n}\r\n\r\nexport default removeNumbers\r\n","import createFullGrid from '../../utils/createFullGrid/createFullGrid'\r\nimport copyGrid from '../../utils/copyGrid/copyGrid'\r\nimport removeNumbers from '../../utils/removeNumbers/removeNumbers'\r\n\r\n\r\nconst defaultState = {\r\n  cellValues: [\r\n    [0, 0, 0, 0, 0, 0, 0, 0, 0],\r\n    [0, 0, 0, 0, 0, 0, 0, 0, 0],\r\n    [0, 0, 0, 0, 0, 0, 0, 0, 0],\r\n    [0, 0, 0, 0, 0, 0, 0, 0, 0],\r\n    [0, 0, 0, 0, 0, 0, 0, 0, 0],\r\n    [0, 0, 0, 0, 0, 0, 0, 0, 0],\r\n    [0, 0, 0, 0, 0, 0, 0, 0, 0],\r\n    [0, 0, 0, 0, 0, 0, 0, 0, 0],\r\n    [0, 0, 0, 0, 0, 0, 0, 0, 0],\r\n  ],\r\n  solvedCellValues: [],\r\n  activeCells: [],\r\n  difficulty: 5,\r\n  inPlay: false,\r\n  gameOver: false,\r\n  usedSolver: false,\r\n  gameDifficulty: 5\r\n}\r\n\r\nexport default (state = defaultState, action) => {\r\n  switch(action.type) {\r\n    case 'CREATE_NEW_GAME':\r\n      const solvedGrid = createFullGrid()\r\n      const copyOfSolvedGrid = copyGrid(solvedGrid)\r\n      const challengeGrid = removeNumbers(copyOfSolvedGrid, action.difficulty)\r\n\r\n      return {\r\n        ...state,\r\n        inPlay: true,\r\n        cellValues: challengeGrid,\r\n        solvedCellValues: solvedGrid,\r\n        gameDifficulty: action.difficulty\r\n      }\r\n    case 'SET_ACTIVE_CELLS':\r\n      const activeCells = []\r\n      activeCells.push(action.row, action.col)\r\n      return {\r\n        ...state,\r\n        activeCells: activeCells\r\n      }\r\n    case 'SET_CELL_VALUE':\r\n      const currentGrid = state.cellValues\r\n      currentGrid[action.row][action.col] = action.value\r\n      return {\r\n        ...state,\r\n        cellValues: [...currentGrid]\r\n      }\r\n    case 'SHOW_SOLUTION':\r\n      const solvedCellValues = state.solvedCellValues\r\n      return {\r\n        ...state,\r\n        usedSolver: true,\r\n        gameOver: true,\r\n        cellValues: solvedCellValues\r\n      }\r\n    case 'GAME_WON':\r\n      return {\r\n        ...state,\r\n        gameOver: true\r\n      }\r\n    default: \r\n      return state\r\n  }\r\n}","\r\nconst defaultState = {\r\n  difficulty: 5,\r\n  feedback: true\r\n}\r\n\r\nexport default (state = defaultState, action) => {\r\n  switch(action.type) {\r\n    case 'SET_DIFFICULTY':\r\n      return {\r\n        ...state,\r\n        difficulty: action.value\r\n      }\r\n    case 'SET_FEEDBACK':\r\n      return {\r\n        ...state,\r\n        feedback: action.value\r\n      }\r\n    default: \r\n      return state\r\n  }\r\n}","const defaultState = {\r\n  email: '',\r\n  username: '',\r\n  password: '',\r\n  error: undefined,\r\n  isLoading: false\r\n}\r\n\r\n\r\nexport default (state = defaultState, action) => {\r\n  switch(action.type) {\r\n    case 'SET_EMAIL':\r\n      return {\r\n        ...state,\r\n        email: action.email\r\n      }\r\n    case 'SET_USERNAME':\r\n      return {\r\n        ...state,\r\n        username: action.username\r\n      }\r\n    case 'SET_PASSWORD':\r\n      return {\r\n        ...state,\r\n        password: action.password\r\n      }\r\n    case 'SET_ERROR_FIELD':\r\n      return {\r\n        ...state,\r\n        error: action.payload\r\n      }\r\n    case 'REMOVE_ERROR_FIELD':\r\n      return {\r\n        ...state,\r\n        error: undefined\r\n      }\r\n    case 'IS_LOADING':\r\n      return {\r\n        ...state,\r\n        isLoading: true\r\n      }\r\n    case 'HAS_LOADED':\r\n      return {\r\n        ...state,\r\n        isLoading: false\r\n      }\r\n    default: \r\n      return state\r\n  }\r\n}","const defaultState = {\r\n  userScores: [],\r\n  nameFilter: undefined\r\n}\r\n\r\n\r\nexport default (state = defaultState, action) => {\r\n  switch(action.type) {\r\n    case 'SET_PLAYER_SCORES':\r\n      return {\r\n        ...state,\r\n        userScores: [...action.scores]\r\n      }\r\n    case 'SET_PLAYER_FILTER':\r\n      return {\r\n        ...state,\r\n        nameFilter: action.playerName\r\n      }\r\n    default: \r\n      return state\r\n  }\r\n}","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { createStore, combineReducers } from \"redux\";\r\nimport { Provider } from \"react-redux\";\r\nimport \"./index.css\";\r\nimport AppRouter from \"./routers/AppRouter\";\r\nimport appReducer from \"./redux/reducers/appReducer\";\r\nimport infoReducer from \"./redux/reducers/infoReducer\";\r\nimport signupReducer from \"./redux/reducers/signupReducer\";\r\nimport playerScoresReducer from \"./redux/reducers/playerScores\"\r\nimport { Elements } from \"@stripe/react-stripe-js\";\r\nimport { loadStripe } from \"@stripe/stripe-js\";\r\nimport AlertTemplate from \"react-alert-template-basic\";\r\nimport { positions, Provider as AlertProvider } from \"react-alert\";\r\n\r\nconst stripePromise = loadStripe(\r\n  `pk_test_51Gr46jKxZD07KMJhc9KCDdlfKT7u2KIlgGq9ASChEsJPldmd1IF9kvIHadV1rkoHLvdCwIXSAi28vK0EIURSWb7I00lHILJ1xz`\r\n);\r\n\r\nconst alertOptions = {\r\n  position: positions.BOTTOM_CENTER,\r\n  timeout: 5000\r\n}\r\n\r\nconst reducer = () => {\r\n  return combineReducers({\r\n    boardState: appReducer,\r\n    infoState: infoReducer,\r\n    signupState: signupReducer,\r\n    playerScoresState: playerScoresReducer\r\n  });\r\n};\r\nconst store = createStore(reducer());\r\nwindow.store = store;\r\n\r\nReactDOM.render(\r\n  <Elements stripe={stripePromise}>\r\n    <Provider store={store}>\r\n      <AlertProvider template={AlertTemplate} {...alertOptions}>\r\n        <AppRouter />\r\n      </AlertProvider>\r\n    </Provider>\r\n  </Elements>,\r\n  document.getElementById(\"sudoku\")\r\n);\r\n"],"sourceRoot":""}